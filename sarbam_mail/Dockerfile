# Use the official Python runtime image
FROM python:3.10-slim
 
# Set environment variables 
# Prevents Python from writing pyc files to disk
ENV PYTHONDONTWRITEBYTECODE=1
#Prevents Python from buffering stdout and stderr
ENV PYTHONUNBUFFERED=1 
 
RUN apt-get update && \
    apt-get install -y \
    build-essential \
    libpq-dev \
    tzdata && \
    ln -fs /usr/share/zoneinfo/$TZ /etc/localtime && \
    dpkg-reconfigure --frontend noninteractive tzdata && \
    rm -rf /var/lib/apt/lists/*


# Create the app directory
RUN mkdir /app
 
# Set the working directory inside the container
WORKDIR /app

# Upgrade pip
RUN pip install --upgrade pip
 
# Copy the Django project  and install dependencies
COPY requirements.txt  /app/
 
# run this command to install all dependencies 
RUN pip install --no-cache-dir -r requirements.txt

RUN pip install gunicorn
 
# Copy the Django project to the container
COPY . /app/
 
# Expose the Django port
EXPOSE 8000
 
# Run Djangoâ€™s development server
CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]